// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: fileservice.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request for sending file
type SendFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileContent   []byte                 `protobuf:"bytes,1,opt,name=file_content,json=fileContent,proto3" json:"file_content,omitempty"`    // Binary file content
	FileName      string                 `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`             // Name of the file
	ReceiverName  string                 `protobuf:"bytes,3,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"` // Receiver name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendFileRequest) Reset() {
	*x = SendFileRequest{}
	mi := &file_fileservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFileRequest) ProtoMessage() {}

func (x *SendFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFileRequest.ProtoReflect.Descriptor instead.
func (*SendFileRequest) Descriptor() ([]byte, []int) {
	return file_fileservice_proto_rawDescGZIP(), []int{0}
}

func (x *SendFileRequest) GetFileContent() []byte {
	if x != nil {
		return x.FileContent
	}
	return nil
}

func (x *SendFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *SendFileRequest) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

// Response for sending file
type SendFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"` // Unique file id in MinIO
	Bucket        string                 `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`               // Bucket in MinIO
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`               // "OK" or an error
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendFileResponse) Reset() {
	*x = SendFileResponse{}
	mi := &file_fileservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFileResponse) ProtoMessage() {}

func (x *SendFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFileResponse.ProtoReflect.Descriptor instead.
func (*SendFileResponse) Descriptor() ([]byte, []int) {
	return file_fileservice_proto_rawDescGZIP(), []int{1}
}

func (x *SendFileResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *SendFileResponse) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *SendFileResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type FileStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileStatusRequest) Reset() {
	*x = FileStatusRequest{}
	mi := &file_fileservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStatusRequest) ProtoMessage() {}

func (x *FileStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStatusRequest.ProtoReflect.Descriptor instead.
func (*FileStatusRequest) Descriptor() ([]byte, []int) {
	return file_fileservice_proto_rawDescGZIP(), []int{2}
}

func (x *FileStatusRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type FileStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "UPLOADED", "DOWNLOADED", "EXPIRED"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileStatusResponse) Reset() {
	*x = FileStatusResponse{}
	mi := &file_fileservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStatusResponse) ProtoMessage() {}

func (x *FileStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStatusResponse.ProtoReflect.Descriptor instead.
func (*FileStatusResponse) Descriptor() ([]byte, []int) {
	return file_fileservice_proto_rawDescGZIP(), []int{3}
}

func (x *FileStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_fileservice_proto protoreflect.FileDescriptor

const file_fileservice_proto_rawDesc = "" +
	"\n" +
	"\x11fileservice.proto\x12\vfileservice\"v\n" +
	"\x0fSendFileRequest\x12!\n" +
	"\ffile_content\x18\x01 \x01(\fR\vfileContent\x12\x1b\n" +
	"\tfile_name\x18\x02 \x01(\tR\bfileName\x12#\n" +
	"\rreceiver_name\x18\x03 \x01(\tR\freceiverName\"[\n" +
	"\x10SendFileResponse\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x16\n" +
	"\x06bucket\x18\x02 \x01(\tR\x06bucket\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\",\n" +
	"\x11FileStatusRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\",\n" +
	"\x12FileStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2\xa8\x01\n" +
	"\vFileService\x12G\n" +
	"\bSendFile\x12\x1c.fileservice.SendFileRequest\x1a\x1d.fileservice.SendFileResponse\x12P\n" +
	"\rGetFileStatus\x12\x1e.fileservice.FileStatusRequest\x1a\x1f.fileservice.FileStatusResponseB#Z!github.com/gslnkvmx/gox/proto/genb\x06proto3"

var (
	file_fileservice_proto_rawDescOnce sync.Once
	file_fileservice_proto_rawDescData []byte
)

func file_fileservice_proto_rawDescGZIP() []byte {
	file_fileservice_proto_rawDescOnce.Do(func() {
		file_fileservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fileservice_proto_rawDesc), len(file_fileservice_proto_rawDesc)))
	})
	return file_fileservice_proto_rawDescData
}

var file_fileservice_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_fileservice_proto_goTypes = []any{
	(*SendFileRequest)(nil),    // 0: fileservice.SendFileRequest
	(*SendFileResponse)(nil),   // 1: fileservice.SendFileResponse
	(*FileStatusRequest)(nil),  // 2: fileservice.FileStatusRequest
	(*FileStatusResponse)(nil), // 3: fileservice.FileStatusResponse
}
var file_fileservice_proto_depIdxs = []int32{
	0, // 0: fileservice.FileService.SendFile:input_type -> fileservice.SendFileRequest
	2, // 1: fileservice.FileService.GetFileStatus:input_type -> fileservice.FileStatusRequest
	1, // 2: fileservice.FileService.SendFile:output_type -> fileservice.SendFileResponse
	3, // 3: fileservice.FileService.GetFileStatus:output_type -> fileservice.FileStatusResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fileservice_proto_init() }
func file_fileservice_proto_init() {
	if File_fileservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fileservice_proto_rawDesc), len(file_fileservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fileservice_proto_goTypes,
		DependencyIndexes: file_fileservice_proto_depIdxs,
		MessageInfos:      file_fileservice_proto_msgTypes,
	}.Build()
	File_fileservice_proto = out.File
	file_fileservice_proto_goTypes = nil
	file_fileservice_proto_depIdxs = nil
}
